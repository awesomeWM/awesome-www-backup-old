#include <gtk/gtk.h>

static gboolean delete_event( GtkWidget *widget,
                              GdkEvent  *event,
                              gpointer   data )
{
    return FALSE;
}

static void destroy( GtkWidget *widget,
                     gpointer   data )
{
    gtk_main_quit ();
}

static void close_window( GtkWidget *widget,
                   gpointer   data )
{
    gtk_main_quit ();
}

int main( int   argc,
          char *argv[] )
{
    GtkWidget *window;
    GtkWidget *button;
    GtkWidget *vbox;
    
    gtk_init (&argc, &argv);
    
    window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
    gtk_window_fullscreen((GtkWindow *)window);
    
    g_signal_connect (window, "delete-event",
              G_CALLBACK (delete_event), NULL);
    
    g_signal_connect (window, "destroy",
              G_CALLBACK (destroy), NULL);
    
    gtk_container_set_border_width (GTK_CONTAINER (window), 10);
    
    button = gtk_button_new_with_label ("Close me!");
    g_signal_connect (button, "clicked",
              G_CALLBACK (close_window), NULL);
    
    vbox = gtk_vbox_new(FALSE, 0);
    
    gtk_box_pack_start((GtkBox *)vbox, button, TRUE, FALSE, 0);

    gtk_container_add (GTK_CONTAINER (window), vbox);
    
    gtk_widget_show_all(window);
    //gtk_window_fullscreen((GtkWindow *)window);

    gtk_main ();
    
    return 0;
}

